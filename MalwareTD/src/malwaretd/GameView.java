package malwaretd;

import java.util.ArrayList;
import java.util.List;

import jgame.Context;
import jgame.GContainer;
import jgame.GObject;
import jgame.GSprite;
import jgame.ImageCache;
import jgame.controller.MouseLocationController;
import jgame.listener.DelayListener;
import jgame.listener.LocalClickListener;
import jgame.listener.TimerListener;
import malwaretd.RangeRing;

public class GameView extends GContainer {
	
	
	double trojanspawn = 10;
	double virusspawn = 5;  
	
	double wormspawn = 3;

	public static boolean settingTurret = false;
	private boolean moveFiring = false;

	public Bank pointbank = new Bank(100);
	public Bank lifebank = new Bank(30);
	public Bank Turret1bank = new Bank(25);
	public Bank Turret2bank = new Bank(50);
	public Bank Turret3bank = new Bank(100);
	public Bank Turret4bank = new Bank(50);
	public Bank Turret5bank = new Bank(50);

	public GameView() {

		super(new GSprite(ImageCache.forClass(MalwareTD.class).get(
				"/Background2.png")));
		// Set the size.
		setSize(640, 640);

		setAnchorTopLeft();

		Goal goal = new Goal();
		addAt(goal, 295, 460);

		InfoArea ia = new InfoArea(pointbank, lifebank);

		addAt(ia, 540, 0);

		InfoArea2 ia2 = new InfoArea2(Turret1bank, Turret2bank, Turret3bank,
				Turret4bank, Turret5bank);

		addAt(ia2, 450, 530);
		
		

		TimerListener BossSpawnTime = new TimerListener(30) {
			@Override
			public void invoke(GObject target, Context context) {
				// TODO Auto-generated method stub
				if (lifebank.getBankValue() > 0)
					lifebank.changeBankValue(-1);
			}
		};

		SpawnListener spawnVirus = new SpawnListener(virusspawn) {
			@Override
			public Enemy createEnemy() {
				return new Enemy1();
			}
		};

		SpawnListener spawnWorm = new SpawnListener(wormspawn) {
			@Override
			public Enemy createEnemy() {
				return new Enemy2();
			}
		};

		SpawnListener spawnTrojan = new SpawnListener(trojanspawn) {
			@Override
			public Enemy createEnemy() {
				//System.out.println(pointbank.getBankValue());
				return new Enemy3();
			}
		};

		addListener(new DelayListener(30 * 30) {
			@Override
			public void invoke(GObject target, Context context) {
				List<Bullet> bu = context.getInstancesOfClass(Bullet.class);
				List<Enemy> en = context.getInstancesOfClass(Enemy.class);
				List<Turret> tu = context.getInstancesOfClass(Turret.class);

				for (Bullet b : bu) {
					b.removeSelf();
				}
				for (Enemy e : en) {
					e.removeSelf();
				}
				for (Turret t : tu) {
					t.removeSelf();
				}

				Enemy malware = new EnemyFinal();
				// ArrayList<Enemy> list = new ArrayList<Enemy>();
				// list.add(malware);
				target.addAt(malware, 1000, 1000);

			};

		});

		// ////////////////////////////Old Enemy Spawn
		// Code////////////////////////////////////
		// TimerListener virusmaker = new TimerListener((int)(virusspawn*30)) {
		// //
		// @Override //
		// public void invoke(jgame.GObject target, jgame.Context context) { //
		// Enemy1 virus = new Enemy1(); //
		// ArrayList<Enemy1> list = new ArrayList<Enemy1>(); //
		// list.add(virus); //
		// addAt(virus, 1000, 1000); //
		// setInterval((int)(virusspawn*30)); //
		// //
		// } //
		// //
		// }; //
		// TimerListener wormmaker = new TimerListener((int)(wormspawn*30)) { //
		// @Override //
		// public void invoke(jgame.GObject target, jgame.Context context) { //
		// Enemy2 worm = new Enemy2(); //
		// ArrayList<Enemy2> list = new ArrayList<Enemy2>(); //
		// list.add(worm); //
		// addAt(worm, 1000, 1000); //
		// //
		// setInterval((int)(wormspawn*30)); //
		// //
		// } //
		// }; //
		// TimerListener trojanmaker = new TimerListener((int)(trojanspawn *30))
		// { //
		// @Override //
		// public void invoke(jgame.GObject target, jgame.Context context) { //
		// Enemy3 trojan = new Enemy3(); //
		// ArrayList<Enemy3> list = new ArrayList<Enemy3>(); //
		// list.add(trojan); //
		// addAt(trojan, 1000, 1000); //
		// //
		// setInterval((int)(trojanspawn *30)); //
		// } //
		// }; //
		// addListener(virusmaker); //
		// addListener(wormmaker); //
		// addListener(trojanmaker); //
		// ////////////////////////////////////////////////////////////////////////////////////

		addListener(spawnWorm);
		addListener(spawnVirus);
		addListener(spawnTrojan);
		addListener(BossSpawnTime);

		MenuArea ma = new MenuArea();
		addAt(ma, 320, 560);
	}

	public void initializeTurret(int tn) {

		Turret t = chooseTurret(tn);

		if (pointbank.getBankValue() >= t.getCost()) {
			addAt(t, 1000, 1000);
			pointbank.changeBankValue(-t.getCost());
		}
		settingTurret = true;
		final RangeRing rr = new RangeRing(t.getFireRange());
		this.addAtCenter(rr);


		
		final MouseLocationController mlc = new MouseLocationController();
		t.addController(mlc);
		rr.addController(mlc);

		final LocalClickListener dropListener = new LocalClickListener() {

			@Override
			public void invoke(GObject target, Context context) {

				target.removeController(mlc);
				target.removeListener(this);
				rr.removeController(mlc);
				rr.removeSelf();

				settingTurret = false;

			}

		};

		t.addListener(dropListener);
		
	}

	public Turret chooseTurret(int Turretn) {
		switch (Turretn) {
		case 0:
			return new Turret1(ImageCache.getImage("/t1.png"));
		case 1:
			return new Turret2(ImageCache.getImage("/t2.png"));
		case 2:
			return new Turret3(ImageCache.getImage("/t3.png"));
		case 3:
			return new Turret4(ImageCache.getImage("/t4.png"));
		case 4:
			return new Turret5(ImageCache.getImage("/t5.png"));
		default:
			
			throw new UnsupportedOperationException("Can't find a " + Turretn);
		}

	}
}
