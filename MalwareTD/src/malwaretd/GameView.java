package malwaretd;

import java.util.ArrayList;

import jgame.Context;
import jgame.GContainer;
import jgame.GSprite;
import jgame.ImageCache;
import jgame.listener.TimerListener;



public class GameView extends GContainer {
	double trojanspawn = 10;
	double virusspawn = 4;
	double wormspawn = 2;
	public GameView() {

		super(new GSprite(ImageCache.forClass(MalwareTD.class).get(
				"/Background1.png")));
		// Set the size.
		setSize(640, 640);

		TimerListener spawnmaster = new TimerListener(10*30) {
			@Override
			public void invoke(jgame.GObject target, Context context) {
			// TODO Auto-generated method stub
				if (virusspawn>.5)
					virusspawn-=.5;

				
				if (wormspawn>.5)
					wormspawn-=.5;

				
				if (trojanspawn>.5)
					trojanspawn-=.5;
			}
		};
		
		TimerListener virusmaker = new TimerListener((int)(virusspawn*30)) {
			@Override
			public void invoke(jgame.GObject target, jgame.Context context) {
				Enemy1 virus = new Enemy1();
				ArrayList<Enemy1> list = new ArrayList<Enemy1>();
				list.add(virus);
				addAt(virus, 1000, 1000);
				setInterval((int)(virusspawn*30));

			}

		};

		TimerListener wormmaker = new TimerListener((int)(wormspawn*30)) {
			@Override
			public void invoke(jgame.GObject target, jgame.Context context) {
				Enemy2 worm = new Enemy2();
				ArrayList<Enemy2> list = new ArrayList<Enemy2>();
				list.add(worm);
				addAt(worm, 1000, 1000);
				
				setInterval((int)(wormspawn*30));
				
			}
		};
		

		TimerListener trojanmaker = new TimerListener((int)(trojanspawn *30)) {
			@Override
			public void invoke(jgame.GObject target, jgame.Context context) {
				Enemy3 trojan = new Enemy3();
				ArrayList<Enemy3> list = new ArrayList<Enemy3>();
				list.add(trojan);
				addAt(trojan, 1000, 1000);

					setInterval((int)(trojanspawn *30));
			}
		};
		addListener(virusmaker);
		addListener(wormmaker);
		addListener(trojanmaker);
		addListener(spawnmaster);
		
		MenuArea ma = new MenuArea();
		addAtCenter(ma);
	}

	
	  public void initializeTurret(final Turret t) {
		  
	        boolean settingTurret = false;
			if (settingTurret) {
	            return;
	        }
	        settingTurret = true; // This is only run when init turret is called
	     
	  }
}

